import { NestContainer } from '@nestjs/core/injector/container';
import { Metatype } from '@nestjs/common/interfaces';
import { NestModuleMetatype } from '@nestjs/common/interfaces/modules/module-metatype.interface';
import { INestApplication, INestMicroservice } from '@nestjs/common';
import { MicroserviceConfiguration } from '@nestjs/microservices';
export declare class TestingModule {
    private readonly container;
    private readonly scope;
    private readonly contextModule;
    private readonly moduleTokenFactory;
    constructor(container: NestContainer, scope: NestModuleMetatype[], contextModule: any);
    createNestApplication(express?: any): INestApplication;
    createNestMicroservice(config: MicroserviceConfiguration): INestMicroservice;
    select<T>(module: Metatype<T>): TestingModule;
    get<T>(metatypeOrToken: Metatype<T> | string): T;
    private findInstanceByPrototypeOrToken<T>(metatypeOrToken);
}
