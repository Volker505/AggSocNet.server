import 'reflect-metadata';
import { NestContainer } from './injector/container';
import { NestModuleMetatype } from '@nestjs/common/interfaces/modules/module-metatype.interface';
import { MetadataScanner } from '../core/metadata-scanner';
export declare class DependenciesScanner {
    private readonly container;
    private readonly metadataScanner;
    constructor(container: NestContainer, metadataScanner: MetadataScanner);
    scan(module: NestModuleMetatype): void;
    private scanForModules(module, scope?);
    private storeModule(module, scope);
    private scanModulesForDependencies();
    private reflectRelatedModules(module, token);
    private reflectComponents(module, token);
    private reflectComponentMetadata(component, token);
    private reflectControllers(module, token);
    private reflectDynamicMetadata(obj, token);
    private reflectExports(module, token);
    private reflectGatewaysMiddlewares(component, token);
    private reflectGuards(component, token);
    private reflectInterceptors(component, token);
    private storeRelatedModule(related, token);
    private storeComponent(component, token);
    private storeInjectable(component, token);
    private storeExportedComponent(exportedComponent, token);
    private storeRoute(route, token);
    private reflectMetadata(metatype, metadata);
}
